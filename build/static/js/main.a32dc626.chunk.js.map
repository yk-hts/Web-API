{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","useEffect","fetch","then","response","json","Header","className","DrawGragh","d","console","log","item","items","judge","newData","i","length","Country","push","name","uv","NewConfirmed","pv","TotalConfirmed","map","convertData","Countries","id","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","render","document","querySelector"],"mappings":"6MAyGeA,EA9DH,WAAO,IAAD,EACQC,mBAAS,MADjB,mBACTC,EADS,KACHC,EADG,KAEhBC,qBAAU,WACRC,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACJ,GACLC,EAAQD,QAEX,IAEH,IAAMO,EAAS,WACb,OACE,yBAAKC,UAAU,SAAf,uKAMEC,EAAY,WAChB,IAAIC,EAAI,GAMR,OALY,MAARV,EACFW,QAAQC,IAAI,cAEZF,EArDc,SAACG,GAInB,IAHA,IAAIC,EAAQ,GACRC,GAAQ,EACNC,EAAU,GACPC,EAAI,EAAGA,EAAIJ,EAAKK,OAAS,EAAGD,IAC/BJ,EAAKI,GAAGE,QAAQ,KAAON,EAAKI,EAAI,GAAGE,QAAQ,KAC7CJ,GAAQ,GAGNA,EACFD,EAAMM,KAAK,CACTC,KAAMR,EAAKI,GAAGE,QACdG,GAAIT,EAAKI,GAAGM,aACZC,GAAIX,EAAKI,GAAGQ,eAAiBZ,EAAKI,GAAGM,gBAGvCT,EAAMM,KAAK,CACTC,KAAMR,EAAKI,GAAGE,QACdG,GAAIT,EAAKI,GAAGM,aACZC,GAAIX,EAAKI,GAAGQ,eAAiBZ,EAAKI,GAAGM,eAEvCP,EAAQI,KAAKN,GACbA,EAAQ,GACRC,GAAQ,GAIZ,OADAC,EAAQU,KAAI,SAACb,GAAD,OAAUF,QAAQC,IAAIC,MAC3BG,EA0BCW,CAAY3B,EAAK4B,WAGrB,6BACGlB,EAAEgB,KAAI,SAACb,GAAD,OACL,yBAAKgB,GAAG,SACN,yBAAKrB,UAAU,cAAcK,EAAK,GAAGQ,KAAK,IAC1C,kBAAC,IAAD,CACES,MAAO,KACPC,OAAQ,IACR/B,KAAMa,EACNmB,OAAQ,CACNC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKA,QAAQ,KAAKC,QAAQ,IAAIC,KAAK,YACnC,kBAAC,IAAD,CAAKF,QAAQ,KAAKC,QAAQ,IAAIC,KAAK,mBAQ/C,OACE,6BACE,kBAACjC,EAAD,MACA,kBAACE,EAAD,Q,OC/FNgC,iBAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,e","file":"static/js/main.a32dc626.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n} from \"recharts\";\r\n\r\nconst convertData = (item) => {\r\n  let items = [];\r\n  let judge = true;\r\n  const newData = [];\r\n  for (let i = 0; i < item.length - 1; i++) {\r\n    if (item[i].Country[0] !== item[i + 1].Country[0]) {\r\n      judge = false;\r\n    }\r\n\r\n    if (judge) {\r\n      items.push({\r\n        name: item[i].Country,\r\n        uv: item[i].NewConfirmed,\r\n        pv: item[i].TotalConfirmed - item[i].NewConfirmed,\r\n      });\r\n    } else {\r\n      items.push({\r\n        name: item[i].Country,\r\n        uv: item[i].NewConfirmed,\r\n        pv: item[i].TotalConfirmed - item[i].NewConfirmed,\r\n      });\r\n      newData.push(items);\r\n      items = [];\r\n      judge = true;\r\n    }\r\n  }\r\n  newData.map((item) => console.log(item));\r\n  return newData;\r\n};\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch(\"https://api.covid19api.com/summary\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }, []);\r\n\r\n  const Header = () => {\r\n    return (\r\n      <div className=\"title\">\r\n        各国の今までのコロナウイルス感染者の合計と新規感染者数\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DrawGragh = () => {\r\n    let d = [];\r\n    if (data == null) {\r\n      console.log(\"loading...\");\r\n    } else {\r\n      d = convertData(data.Countries);\r\n    }\r\n    return (\r\n      <div>\r\n        {d.map((item) => (\r\n          <div id=\"link1\">\r\n            <div className=\"title is-3\">{item[0].name[0]}</div>\r\n            <BarChart\r\n              width={1500}\r\n              height={300}\r\n              data={item}\r\n              margin={{\r\n                top: 20,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"name\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"pv\" stackId=\"a\" fill=\"#8884d8\" />\r\n              <Bar dataKey=\"uv\" stackId=\"a\" fill=\"#82ca9d\" />\r\n            </BarChart>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DrawGragh />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport 'bulma/css/bulma.css'\r\n\r\nrender(<App />, document.querySelector(\"#content\"));"],"sourceRoot":""}